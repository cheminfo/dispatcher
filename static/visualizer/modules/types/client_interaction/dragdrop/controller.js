define(["modules/default/defaultcontroller","src/util/api","src/util/versioning","src/data/structures","src/util/debug"],function(a,b,c,d,e){function f(){}var g=new RegExp(";base64,(.+)$");return f.prototype=$.extend(!0,{},a),f.prototype.moduleInformation={moduleName:"Drag and drop",description:"Drop a file or paste some content to load",author:"Norman Pellet, MichaÃ«l Zasso",date:"31.07.2014",license:"MIT",cssClass:"dragdrop"},f.prototype.references={data:{label:"First data element"},dataarray:{label:"Array of loaded data"}},f.prototype.events={onRead:{label:"The data has been read",refVariable:["data","dataarray"]}},f.prototype.configurationStructure=function(){for(var a=d._getList(),b=a.length,c=new Array(b),e=0;b>e;e++)c[e]={key:a[e],title:a[e]};return{groups:{group:{options:{type:"list"},fields:{label:{type:"text",title:"Text displayed by default","default":"Drop your file here"},dragoverlabel:{type:"text",title:"Text displayed on drag"},hoverlabel:{type:"text",title:"Text displayed on hover"},getusermedia:{type:"checkbox",title:"Use getUserMedia",options:{yes:"Yes"},"default":[]},capture:{type:"combo",title:"Capture",options:[{title:"none",key:"none"},{title:"camera",key:"camera"},{title:"camcorder",key:"camcorder"},{title:"microphone",key:"microphone"}],"default":"none"}}},vars:{options:{type:"table",multiple:!0,title:"For files"},fields:{filter:{type:"combo",title:"filter on",options:[{title:"File extension",key:"ext"},{title:"Mime-type",key:"mime"}],"default":"ext"},extension:{type:"text",title:"Filter","default":"*"},filetype:{type:"combo",title:"Read type",options:[{title:"Text",key:"text"},{title:"Base64 Encoded",key:"base64"},{title:"Object URL",key:"url"}],"default":"text"},type:{type:"combo",title:"Force type",options:c,"default":"string"},mime:{type:"text",title:"Force mime-type"},variable:{type:"text",title:"Temporary variable","default":"file"}}},string:{options:{type:"table",multiple:!0,title:"For strings"},fields:{type:{type:"combo",title:"Force type",options:c,"default":"string"},filter:{type:"text",title:"filter (mime-type)","default":"text/plain"},variable:{type:"text",title:"Temporary variable","default":"str"}}},photo:{options:{type:"table",multiple:!1,title:"For photos"},fields:{variable:{type:"text",title:"Temporary variable","default":"photo"}}}}}},f.prototype.configAliases={vartype:["groups","group",0,"vartype",0],label:["groups","group",0,"label",0],dragoverlabel:["groups","group",0,"dragoverlabel",0],hoverlabel:["groups","group",0,"hoverlabel",0],getusermedia:["groups","group",0,"getusermedia",0],vars:["groups","vars",0],string:["groups","string",0],photo:["groups","photo",0],showPhotoButton:["groups","group",0,"showPhotoButton",0],capture:["groups","group",0,"capture",0]},f.prototype.initImpl=function(){var a,b,c,d,e=this.module.getConfiguration("vars");if(e){var f=[];for(a=0,b=e.length;b>a;a++)c=e[a],d=$.extend({},c),f.push(d),d.match=c.extension?new RegExp("^"+c.extension.replace(/\*/g,".*").replace(/\?/g,".")+"$","i"):/^.*$/i,c.filter||(d.filter="ext");this.fileCfg=f}var g=this.module.getConfiguration("string");if(g){var h=[];for(a=0,b=g.length;b>a;a++)c=g[a],d=$.extend({},c),h.push(d),d.match=c.filter?new RegExp("^"+c.filter.replace(/\*/g,".*").replace(/\?/g,".")+"$","i"):/^text\/plain$/i;this.stringCfg=h,this.photoCfg=this.module.getConfiguration("photo")}this.resolveReady()},f.prototype.parseString=function(a,b){try{var c=d._parse(b.cfg.type,a);this.tmpVar(c,b)}catch(e){}},f.prototype.open=function(a){if(a.items.length){for(var b,c,d,e=this,f=[],g=this.fileCfg,h=this.stringCfg,i=0,j=a.items.length;j>i;i++)b=a.items[i],d=$.Deferred(),f.push(d),"file"===b.kind?(b=b.getAsFile(),(c=this.checkFileMetadata(b,g))?(c.def=d,this.read(b,c)):d.resolve()):(c=this.checkStringMetadata(b,h))?(c.def=d,this.treatString(b,c)):d.resolve();$.when.apply(window,f).done(function(){e.createDataFromEvent("onRead","data",e.module.model.tmpVars),e.createDataFromEvent("onRead","dataarray",e.module.model.tmpVarsArray)})}},f.prototype.openPhoto=function(a){var b=this,c=this.checkPhotoMetadata(this.photoCfg);c.def=$.Deferred(),this.fileRead(a,c),c.def.done(function(){b.createDataFromEvent("onRead","data",b.module.model.tmpVars),b.createDataFromEvent("onRead","dataarray",b.module.model.tmpVarsArray)})},f.prototype.treatString=function(a,b){var c=this;a.getAsString(function(a){c.parseString(a,b)})},f.prototype.checkStringMetadata=function(a,b){if(!b)return e.warn("No string filter configured");for(var c,d=a.type||"text/plain",f=0,g=b.length;g>f;f++){var h=b[f].match;if(h.test(d)){c=b[f];break}}return c?{filename:"",mime:d,cfg:c}:e.warn("String item's mime-type doesn't match: "+d)},f.prototype.checkFileMetadata=function(a,b){if(!b)return e.warn("No file filter configured");var c,d,f=a.name||"",g=a.type,h=f.split(".");c=h.length<2?"":h.pop().toLowerCase();for(var i=0,j=b.length;j>i;i++){var k=b[i].filter;if("ext"===k){var l=b[i].extension;if("*"===l||-1!==l.split(",").indexOf(c)){d=b[i];break}}else{var m=b[i].match;if(m.test(g)){d=b[i];break}}}return!d&&f?e.warn("Extension "+c+" not configured (filename: "+f+")"):d?{filename:f,mime:d.mime||g||"application/octet-stream",cfg:d}:e.warn("Item has no filename and mime-type doesn't match: "+g)},f.prototype.checkPhotoMetadata=function(a){var b=a[0];return b.filetype="url",b.type="png",{mime:"image/png",cfg:b}},f.prototype.fileRead=function(a,b){switch(b.cfg.filetype){case"text":this.parseString(a,b);break;case"base64":var c=g.exec(a)[1];this.tmpVar(c,b);break;case"url":this.tmpVar(a,b)}},f.prototype.read=function(a,b){var c=this,d=new FileReader;switch(d.onload=function(a){c.fileRead(a.target.result,b)},d.onerror=function(a){console.error(a)},b.cfg.filetype){case"text":d.readAsText(a);break;case"base64":case"url":d.readAsDataURL(a)}},f.prototype.tmpVar=function(a,b){"object"!=typeof a&&(a={type:b.cfg.type,value:a});var c=b.cfg.variable,d=new DataObject({filename:b.filename,mimetype:b.mime,content:a});this.module.model.tmpVarsArray[c]||(this.module.model.tmpVarsArray[c]=new DataArray),this.module.model.tmpVarsArray[c].push(d),this.module.model.tmpVars[c]=d,b.def.resolve()},f.prototype.emulDataTransfer=function(a){var b={};b.files=a.target.files,b.items=[];for(var c=0;c<a.target.files.length;c++)!function(c){b.items.push({kind:"file",getAsFile:function(){return a.target.files[c]}})}(c);return b},f});