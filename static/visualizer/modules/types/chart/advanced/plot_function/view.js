define(["require","modules/default/defaultview","src/util/util","src/util/api","components/three.js/build/three.min"],function(a,b,c){function d(){}return d.prototype=$.extend(!0,{},b,{init:function(){var b=this;this.webgl=function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return!1}}();var d=$.proxy(b.module.getConfiguration,b.module);this._id=c.getNextUniqueId();var e=$("<div>",{Id:this._id});e.css("display","table").css("height","100%").css("width","100%").css("overflow","hidden"),this.dom=e,this.module.getDomContent().html(this.dom).css("overflow","hidden"),this.zFunctionText=d("function")||"sin(sqrt(0.01*x^2  + 0.01*y^2))*10",this.xMin=d("xMin")||-100,this.xMax=d("xMax")||100,this.yMin=d("yMin")||-100,this.yMax=d("yMax")||100,this.zMin=d("zMin")||-100,this.zMax=d("zMax")||100,this.xRange=this.xMax-this.xMin,this.yRange=this.yMax-this.yMin,this.scene&&(this.scene.remove(this.graphGeometry),this.scene.remove(this.graphMesh),this.scene.remove(this.floor),delete this.graphGeometry,delete this.graphMesh,delete this.floor),this.graphGeometry,this.graphMesh,a(["./TrackballControls","lib/parser/Parser"],function(){b.createGraph(),b.scene=new THREE.Scene,b.renderer||(b.renderer=b.webgl?new THREE.WebGLRenderer({antialias:!0}):new THREE.CanvasRenderer,b.renderer.setClearColor(15658734,1)),b.dom.append(b.renderer.domElement),b.addFloor(b.scene),b.resolveReady()}),this.doAnimation=!1,this.dom.on("mouseenter",function(){b.doAnimation=!0}),this.dom.on("mouseleave",function(){b.doAnimation=!1})},blank:function(){this.dom.empty()},inDom:function(){},onResize:function(){if(this.webgl){var b=this;console.log(this.onReady),this.module.viewReady.then(function(){{var c=$.proxy(b.module.getConfiguration,b.module);c("segments")}b.graphMesh&&b.scene.remove(b.graphMesh);var d=new THREE.ImageUtils.loadTexture(a.toUrl("./square.png"));d.wrapS=d.wrapT=THREE.RepeatWrapping,d.repeat.set(40,40);var e=new THREE.MeshBasicMaterial({map:d,vertexColors:THREE.VertexColors,side:THREE.DoubleSide});b.graphMesh=new THREE.Mesh(b.graphGeometry,e),b.graphMesh.doubleSided=!0,b.scene.add(b.graphMesh),b.renderer.setSize(b.width,b.height),b.setCamera(),b.setControls(),b.firstAnimation=60,b.animate()})}},addFloor:function(a){var b=new THREE.MeshBasicMaterial({color:136,wireframe:!0,side:THREE.DoubleSide}),c=new THREE.PlaneGeometry(1e3,1e3,10,10);self.floor=new THREE.Mesh(c,b),a.add(self.floor)},update:{"function":function(){}},animate:function(){var a=this;requestAnimationFrame(a.animate.bind(a)),(a.doAnimation||a.firstAnimation>0)&&(a.firstAnimation>0&&a.firstAnimation--,a.renderer.render(a.scene,a.camera),a.controls.update())},setCamera:function(){var a=45,b=this.width/this.height,c=.1,d=2e4;this.camera=new THREE.PerspectiveCamera(a,b,c,d),this.camera.position.set(2*this.xMax,.5*this.yMax,4*this.zMax),this.camera.up=new THREE.Vector3(0,0,1),this.camera.lookAt(this.scene.position),this.scene.add(this.camera)},setControls:function(){this.controls=new THREE.TrackballControls(this.camera,this.renderer.domElement)},createGraph:function(){var a=this,b=$.proxy(a.module.getConfiguration,a.module),c=b("segments"),d=Parser.parse(a.zFunctionText).toJSFunction(["x","y"]),e=function(b,c){b=a.xRange*b+a.xMin,c=a.yRange*c+a.yMin;var e=d(b,c);return isNaN(e)?new THREE.Vector3(0,0,0):new THREE.Vector3(b,c,e)},f=new THREE.ParametricGeometry(e,c,c,!0);f.computeBoundingBox(),a.zMin=f.boundingBox.min.z,a.zMax=f.boundingBox.max.z,a.zRange=a.zMax-a.zMin;for(var g,h,i,j,k,l=["a","b","c","d"],m=0;m<f.vertices.length;m++)h=f.vertices[m],g=new THREE.Color(255),g.setHSL(.7*(a.zMax-h.z)/a.zRange,1,.5),f.colors[m]=g;for(var m=0;m<f.faces.length;m++){i=f.faces[m],j=i instanceof THREE.Face3?3:4;for(var n=0;j>n;n++)k=i[l[n]],i.vertexColors[n]=f.colors[k]}a.graphGeometry=f},getDom:function(){return this.dom}}),d});